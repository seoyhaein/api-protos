// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: ichthys/v1/volres_service.proto

package volresv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 볼륨 메타데이터 + (선택적) 내부 트리 전체
type VolumeManifest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// — 공통 메타데이터 —
	VolumeRef   string            `protobuf:"bytes,1,opt,name=volume_ref,json=volumeRef,proto3" json:"volume_ref,omitempty"`                                                              // 볼륨 식별자
	DisplayName string            `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`                                                        // UI에 표시할 이름
	Description string            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                                                                           // 설명 (optional)
	Format      string            `protobuf:"bytes,4,opt,name=format,proto3" json:"format,omitempty"`                                                                                     // 형식 (예: FASTA, VCF)
	TotalSize   uint64            `protobuf:"varint,5,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`                                                             // 전체 크기 (bytes)
	RecordCount uint64            `protobuf:"varint,6,opt,name=record_count,json=recordCount,proto3" json:"record_count,omitempty"`                                                       // 레코드 수 (optional)
	CreatedAt   string            `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                                              // 생성 시각 (RFC3339)
	Annotations map[string]string `protobuf:"bytes,8,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 추가 도메인 속성 (예: species)
	// — 상세 정보(파일/디렉터리 트리) —
	// ListVolumes 같은 RPC에서는 이 필드를 비워서 보내고,
	// GetVolumeDetails 같은 RPC에서만 root를 채워 줍니다.
	Root          *VolumeResource `protobuf:"bytes,9,opt,name=root,proto3" json:"root,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VolumeManifest) Reset() {
	*x = VolumeManifest{}
	mi := &file_ichthys_v1_volres_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VolumeManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VolumeManifest) ProtoMessage() {}

func (x *VolumeManifest) ProtoReflect() protoreflect.Message {
	mi := &file_ichthys_v1_volres_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VolumeManifest.ProtoReflect.Descriptor instead.
func (*VolumeManifest) Descriptor() ([]byte, []int) {
	return file_ichthys_v1_volres_service_proto_rawDescGZIP(), []int{0}
}

func (x *VolumeManifest) GetVolumeRef() string {
	if x != nil {
		return x.VolumeRef
	}
	return ""
}

func (x *VolumeManifest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *VolumeManifest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *VolumeManifest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *VolumeManifest) GetTotalSize() uint64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *VolumeManifest) GetRecordCount() uint64 {
	if x != nil {
		return x.RecordCount
	}
	return 0
}

func (x *VolumeManifest) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *VolumeManifest) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *VolumeManifest) GetRoot() *VolumeResource {
	if x != nil {
		return x.Root
	}
	return nil
}

type VolumeResource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                 // SHA256 digest 등 고유 ID
	Basename      string                 `protobuf:"bytes,2,opt,name=basename,proto3" json:"basename,omitempty"`                                                                     // 파일/디렉터리 이름
	FullPath      string                 `protobuf:"bytes,3,opt,name=full_path,json=fullPath,proto3" json:"full_path,omitempty"`                                                     // 루트 기준 상대경로
	IsDirectory   bool                   `protobuf:"varint,4,opt,name=is_directory,json=isDirectory,proto3" json:"is_directory,omitempty"`                                           // 디렉터리 여부
	Size          uint64                 `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`                                                                            // 파일 크기 (bytes, 디렉터리는 0)
	Checksum      string                 `protobuf:"bytes,6,opt,name=checksum,proto3" json:"checksum,omitempty"`                                                                     // sha256 체크섬 (파일만)
	ModTime       int64                  `protobuf:"varint,7,opt,name=mod_time,json=modTime,proto3" json:"mod_time,omitempty"`                                                       // 수정 시각 (Unix epoch)
	Attrs         map[string]string      `protobuf:"bytes,8,rep,name=attrs,proto3" json:"attrs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 추가 파일 속성
	Children      []*VolumeResource      `protobuf:"bytes,9,rep,name=children,proto3" json:"children,omitempty"`                                                                     // 하위 리소스들
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VolumeResource) Reset() {
	*x = VolumeResource{}
	mi := &file_ichthys_v1_volres_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VolumeResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VolumeResource) ProtoMessage() {}

func (x *VolumeResource) ProtoReflect() protoreflect.Message {
	mi := &file_ichthys_v1_volres_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VolumeResource.ProtoReflect.Descriptor instead.
func (*VolumeResource) Descriptor() ([]byte, []int) {
	return file_ichthys_v1_volres_service_proto_rawDescGZIP(), []int{1}
}

func (x *VolumeResource) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VolumeResource) GetBasename() string {
	if x != nil {
		return x.Basename
	}
	return ""
}

func (x *VolumeResource) GetFullPath() string {
	if x != nil {
		return x.FullPath
	}
	return ""
}

func (x *VolumeResource) GetIsDirectory() bool {
	if x != nil {
		return x.IsDirectory
	}
	return false
}

func (x *VolumeResource) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *VolumeResource) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *VolumeResource) GetModTime() int64 {
	if x != nil {
		return x.ModTime
	}
	return 0
}

func (x *VolumeResource) GetAttrs() map[string]string {
	if x != nil {
		return x.Attrs
	}
	return nil
}

func (x *VolumeResource) GetChildren() []*VolumeResource {
	if x != nil {
		return x.Children
	}
	return nil
}

// 여러 개의 VolumeManifest를 한 번에 담는 메시지
type VolumeList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 담을 볼륨들을 반복 필드로 선언
	Volumes       []*VolumeManifest `protobuf:"bytes,1,rep,name=volumes,proto3" json:"volumes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VolumeList) Reset() {
	*x = VolumeList{}
	mi := &file_ichthys_v1_volres_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VolumeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VolumeList) ProtoMessage() {}

func (x *VolumeList) ProtoReflect() protoreflect.Message {
	mi := &file_ichthys_v1_volres_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VolumeList.ProtoReflect.Descriptor instead.
func (*VolumeList) Descriptor() ([]byte, []int) {
	return file_ichthys_v1_volres_service_proto_rawDescGZIP(), []int{2}
}

func (x *VolumeList) GetVolumes() []*VolumeManifest {
	if x != nil {
		return x.Volumes
	}
	return nil
}

var File_ichthys_v1_volres_service_proto protoreflect.FileDescriptor

const file_ichthys_v1_volres_service_proto_rawDesc = "" +
	"\n" +
	"\x1fichthys/v1/volres_service.proto\x12\aichthys\"\xa6\x03\n" +
	"\x0eVolumeManifest\x12\x1d\n" +
	"\n" +
	"volume_ref\x18\x01 \x01(\tR\tvolumeRef\x12!\n" +
	"\fdisplay_name\x18\x02 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x16\n" +
	"\x06format\x18\x04 \x01(\tR\x06format\x12\x1d\n" +
	"\n" +
	"total_size\x18\x05 \x01(\x04R\ttotalSize\x12!\n" +
	"\frecord_count\x18\x06 \x01(\x04R\vrecordCount\x12\x1d\n" +
	"\n" +
	"created_at\x18\a \x01(\tR\tcreatedAt\x12J\n" +
	"\vannotations\x18\b \x03(\v2(.ichthys.VolumeManifest.AnnotationsEntryR\vannotations\x12+\n" +
	"\x04root\x18\t \x01(\v2\x17.ichthys.VolumeResourceR\x04root\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf0\x02\n" +
	"\x0eVolumeResource\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\bbasename\x18\x02 \x01(\tR\bbasename\x12\x1b\n" +
	"\tfull_path\x18\x03 \x01(\tR\bfullPath\x12!\n" +
	"\fis_directory\x18\x04 \x01(\bR\visDirectory\x12\x12\n" +
	"\x04size\x18\x05 \x01(\x04R\x04size\x12\x1a\n" +
	"\bchecksum\x18\x06 \x01(\tR\bchecksum\x12\x19\n" +
	"\bmod_time\x18\a \x01(\x03R\amodTime\x128\n" +
	"\x05attrs\x18\b \x03(\v2\".ichthys.VolumeResource.AttrsEntryR\x05attrs\x123\n" +
	"\bchildren\x18\t \x03(\v2\x17.ichthys.VolumeResourceR\bchildren\x1a8\n" +
	"\n" +
	"AttrsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"?\n" +
	"\n" +
	"VolumeList\x121\n" +
	"\avolumes\x18\x01 \x03(\v2\x17.ichthys.VolumeManifestR\avolumesB\x9d\x01\n" +
	"\vcom.ichthysB\x12VolresServiceProtoP\x01Z>github.com/seoyhaein/api-protos/gen/go/volres/ichthys;volresv1\xa2\x02\x03IXX\xaa\x02\aIchthys\xca\x02\aIchthys\xe2\x02\x13Ichthys\\GPBMetadata\xea\x02\aIchthysb\x06proto3"

var (
	file_ichthys_v1_volres_service_proto_rawDescOnce sync.Once
	file_ichthys_v1_volres_service_proto_rawDescData []byte
)

func file_ichthys_v1_volres_service_proto_rawDescGZIP() []byte {
	file_ichthys_v1_volres_service_proto_rawDescOnce.Do(func() {
		file_ichthys_v1_volres_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ichthys_v1_volres_service_proto_rawDesc), len(file_ichthys_v1_volres_service_proto_rawDesc)))
	})
	return file_ichthys_v1_volres_service_proto_rawDescData
}

var file_ichthys_v1_volres_service_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_ichthys_v1_volres_service_proto_goTypes = []any{
	(*VolumeManifest)(nil), // 0: ichthys.VolumeManifest
	(*VolumeResource)(nil), // 1: ichthys.VolumeResource
	(*VolumeList)(nil),     // 2: ichthys.VolumeList
	nil,                    // 3: ichthys.VolumeManifest.AnnotationsEntry
	nil,                    // 4: ichthys.VolumeResource.AttrsEntry
}
var file_ichthys_v1_volres_service_proto_depIdxs = []int32{
	3, // 0: ichthys.VolumeManifest.annotations:type_name -> ichthys.VolumeManifest.AnnotationsEntry
	1, // 1: ichthys.VolumeManifest.root:type_name -> ichthys.VolumeResource
	4, // 2: ichthys.VolumeResource.attrs:type_name -> ichthys.VolumeResource.AttrsEntry
	1, // 3: ichthys.VolumeResource.children:type_name -> ichthys.VolumeResource
	0, // 4: ichthys.VolumeList.volumes:type_name -> ichthys.VolumeManifest
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_ichthys_v1_volres_service_proto_init() }
func file_ichthys_v1_volres_service_proto_init() {
	if File_ichthys_v1_volres_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ichthys_v1_volres_service_proto_rawDesc), len(file_ichthys_v1_volres_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ichthys_v1_volres_service_proto_goTypes,
		DependencyIndexes: file_ichthys_v1_volres_service_proto_depIdxs,
		MessageInfos:      file_ichthys_v1_volres_service_proto_msgTypes,
	}.Build()
	File_ichthys_v1_volres_service_proto = out.File
	file_ichthys_v1_volres_service_proto_goTypes = nil
	file_ichthys_v1_volres_service_proto_depIdxs = nil
}
